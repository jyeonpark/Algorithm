'''

N명의 모험가를 대상으로 '공포도'를 측정하는데,
공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 한다.
예) N=5 이고, 각 모험가의 공포도가 2 3 1 2 2 라면
여행을 떠날 수 있는 그룹 수의 최댓값은 2 다.

'''
n = int(input())
data = list(map(int, input().split()))

# 오름차순 정렬
data.sort()
# 총 그룹 수
group = 0
# 현재 그룹의 모험가 수
count = 0

for i in data:
    count += 1
    if i <= count :
        group += 1
        count = 0

print(group)

'''
# 풀이
data의 각 모험가의 공포도(i)보다 현재 그룹에 속해있는 모험가의 수(count)가 같거나 이상이라면,
하나의 그룹이 완성된 것으로 간주하고(group += 1), 
현재 그룹에 속한 모험가의 수(count)를 0으로 초기화한다.

처음에 모험가를 공포도 순으로 오름차순으로 정렬함으로써
항상 최소한의 모험가의 수만 포함하여 그룹을 결성한다. 
이는 현재 상황에서 가장 최소의 공포도를 선택함으로써
최대한 많은 그룹 수를 만들기 위함으로 그리디 알고리즘이라고 할 수 있다.
'''